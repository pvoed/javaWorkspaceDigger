/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SoftwareD_GUI2.java
 *
 * Created on Apr 27, 2011, 1:18:23 PM
 */

package edu.ycp.cs320.ClassExtracter.gui;

import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.swing.tree.TreePath;

import edu.ycp.cs320.ClassExtracter.FileListStructure;
import edu.ycp.cs320.ClassExtracter.FileProperties;
import edu.ycp.cs320.ClassExtracter.MethodProperties;
import edu.ycp.cs320.ClassExtracter.ProgramReader;
import edu.ycp.cs320.ClassExtracter.SystemControl;
import java.io.FileReader;
import java.io.InputStreamReader;
import java.io.Reader;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeNode;

/**
 *
 * @author npaulovi
 */
public class SoftwareD_GUI2 extends javax.swing.JPanel {
	private FileListStructure workList, personalList;
	private SystemControl sc;
	private ProgramReader pr;

	/** Creates new form SoftwareD_GUI2 
	 * @throws FileNotFoundException */
	public SoftwareD_GUI2() throws FileNotFoundException {
		initComponents();
		workList = new FileListStructure();
		personalList = new FileListStructure();
		sc = new SystemControl();
		pr = new ProgramReader();


	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        WorkListScrollPane = new javax.swing.JScrollPane();
        WorkListTree = new javax.swing.JTree();
        AddButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        PersonalListLabel = new javax.swing.JLabel();
        UploadButton = new javax.swing.JButton();
        FileDownloadButton = new javax.swing.JButton();
        W_DescriptionScrollPane = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        P_DescriptionScrollPane = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList();
        PersonalListScrollPane = new javax.swing.JScrollPane();
        jTree2 = new javax.swing.JTree();

        setPreferredSize(new java.awt.Dimension(600, 400));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12));
        jLabel1.setText("Work List");
        add(jLabel1);
        jLabel1.setBounds(50, 0, 84, 36);

        WorkListScrollPane.setViewportView(WorkListTree);

        add(WorkListScrollPane);
        WorkListScrollPane.setBounds(20, 30, 130, 120);

        AddButton.setText("ADD");
        AddButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddButtonMouseClicked(evt);
            }
        });
        add(AddButton);
        AddButton.setBounds(170, 80, 100, 23);

        RemoveButton.setText("REMOVE");
        RemoveButton.setActionCommand("jButton2");
        RemoveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RemoveButtonMouseClicked(evt);
            }
        });
        add(RemoveButton);
        RemoveButton.setBounds(420, 170, 73, 22);

        PersonalListLabel.setFont(new java.awt.Font("Arial", 1, 12));
        PersonalListLabel.setText("Personal List");
        add(PersonalListLabel);
        PersonalListLabel.setBounds(350, 10, 75, 15);

        UploadButton.setFont(new java.awt.Font("Tahoma", 0, 10));
        UploadButton.setText("File Upload");
        UploadButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UploadButtonMouseClicked(evt);
            }
        });
        add(UploadButton);
        UploadButton.setBounds(50, 170, 83, 21);

        FileDownloadButton.setFont(new java.awt.Font("Tahoma", 0, 10));
        FileDownloadButton.setText("File Download");
        add(FileDownloadButton);
        FileDownloadButton.setBounds(280, 170, 97, 21);

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "W_DESCRIPTION BOX" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        W_DescriptionScrollPane.setViewportView(jList3);

        add(W_DescriptionScrollPane);
        W_DescriptionScrollPane.setBounds(20, 210, 250, 130);

        jList4.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "P_DESCRIPTION BOX" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        P_DescriptionScrollPane.setViewportView(jList4);

        add(P_DescriptionScrollPane);
        P_DescriptionScrollPane.setBounds(290, 210, 250, 130);

        PersonalListScrollPane.setViewportView(jTree2);

        add(PersonalListScrollPane);
        PersonalListScrollPane.setBounds(330, 30, 122, 126);
    }// </editor-fold>//GEN-END:initComponents

	private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton2ActionPerformed

        static class FilePropertiesNode extends DefaultMutableTreeNode {
            FilePropertiesNode(FileProperties fp) {
                super(fp);
            }

            public String toString() {
                FileProperties fp = getFileProperties();

                String s = "";
                // TODO: convert the FileProperties object to a string

                return s;
            }

            public FileProperties getFileProperties() {
                return (FileProperties) getUserObject();
            }
        }

        static class MethodPropertiesNode extends DefaultMutableTreeNode {
            MethodPropertiesNode(MethodProperties mp) {
                super(mp);
            }

            public String toString() {
                MethodProperties mp = getMethodProperties();;

                String s = "";
                // TODO: convert the MethodProperties object to a string
                s += mp.getMethodName();

                return s;
            }

            public MethodProperties getMethodProperties() {
                return (MethodProperties) getUserObject();
            }
        }

	private void file_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		// TODO add your handling code here:
	    // Upload Button

	}//GEN-LAST:event_jButton3ActionPerformed

	
	

	private void file_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton4ActionPerformed

	private void file_uploadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
		JFileChooser javaFileChooser = new JFileChooser();
		FileFilter filter = new FileFilter() {
			@Override
			public boolean accept(File f) {
				return !f.isDirectory()&& f.getName().endsWith(".java");
			}

			@Override
			public String getDescription() {
				return "Java Files";
			}
		};
		javaFileChooser.setFileFilter(filter);
		javaFileChooser.setMultiSelectionEnabled(true);

		int rc = javaFileChooser.showOpenDialog(this);
		if (rc == JFileChooser.APPROVE_OPTION) {
			File[] selected = javaFileChooser.getSelectedFiles();
                       for(int i = 0; i< selected.length; i++){
                try {

                    FileReader r = new FileReader(selected[i]);
                    pr.setFileReader(r);
                    try {
                        pr.readLines();
                    } catch (IOException ex) {
                       //cant read line
                    }

                    FileProperties doneFile = pr.getFP();
                    workList.addFile(doneFile);
                } catch (FileNotFoundException ex) {
                    //does not exist
                }
                       }
		}
               DefaultTreeModel fileTree= createTree(workList);
        

        WorkListTree.setModel(fileTree);
	}//GEN-LAST:event_jButton3MouseClicked
	public DefaultTreeModel createTree(FileListStructure f ){
        DefaultMutableTreeNode root = new DefaultMutableTreeNode("Project");
        DefaultTreeModel treeModel = new DefaultTreeModel(root);

        FileProperties[] allFileProperties = f.getFileProperties();
            
        //for (FileProperties fp : allFileProperties)
        for (int z = 0; z < allFileProperties.length; z++){
            FileProperties fp = allFileProperties[z];
            DefaultMutableTreeNode fileNode = new DefaultMutableTreeNode(new FilePropertiesNode(fp));
            root.add(fileNode);

          try {
             
                    for (int i = 0; i < fp.getMethodSize(); i++){
                    MethodProperties mp = fp.getMethod(i);
                    DefaultMutableTreeNode methodNode = new DefaultMutableTreeNode(new MethodPropertiesNode(mp));
                    fileNode.add(methodNode);
                    
              }
          } catch (IndexOutOfBoundsException e) {
              //  break;
           }
        }
      return treeModel;
        }
	private void addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
		// TODO add your handling code here:

		// dectect one part of the tree... brachnes, leaves, trunk.


	}//GEN-LAST:event_jButton1MouseClicked

	private void removeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
		// TODO add your handling code here:
	}//GEN-LAST:event_jButton2MouseClicked
	private void addActionPerformed(java.awt.event.ActionEvent evt) {


		TreePath[] selectedItems = WorkListTree.getSelectionPaths();

		for (TreePath path : selectedItems) {
			Object[] pathItems = path.getPath();

			Object selectedItem = pathItems[pathItems.length - 1];

			System.out.println(selectedItem.toString() + " is selected");
		}
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JButton FileDownloadButton;
    private javax.swing.JScrollPane P_DescriptionScrollPane;
    private javax.swing.JLabel PersonalListLabel;
    private javax.swing.JScrollPane PersonalListScrollPane;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JButton UploadButton;
    private javax.swing.JScrollPane W_DescriptionScrollPane;
    private javax.swing.JScrollPane WorkListScrollPane;
    private javax.swing.JTree WorkListTree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList3;
    private javax.swing.JList jList4;
    private javax.swing.JTree jTree2;
    // End of variables declaration//GEN-END:variables

}
